/**
 *
 * std::cout 是标准输出流对象，通常用于将数据输出到控制台。其全称为 "console output"。
 * 它是一个流，会在适合的时候刷新（flush），这意味着数据会被暂时存储在缓冲区中，直到缓冲区满了或者程序结束时才会真正输出到控制台。
 *
 * "<<" 不是位移运算，是库内部使用了运算符重载来实现的功能。
 * "::" 是作用域解析运算符，用于指定命名空间或类的成员（std 是一个命名空间）。
 *
 * endl 和 '\n' 的区别：
 * - endl 不仅会插入一个换行符，还会刷新输出缓冲区。
 * - '\n' 只是一个换行符，不会刷新缓冲区。
 * 刷新缓冲区会有性能开销，因此在不需要立即显示输出时，使用 '\n' 更高效。
 */

#include <iostream>

int main() {

  // 使用 << 运算符将字符串 "Hello" 发送到标准输出流 std::cout
  // 默认没有换行符结尾
  std::cout << "Hello";

  // endl: 输出换行符并刷新输出缓冲区
  // cout 是缓冲的，要发送的内容会被暂时存储起来，直到周期性地刷新或手动刷新才会更新到控制台
  // 使用 endl 可以确保输出立即显示，但是会有性能开销
  std::cout << " world!" << std::endl;

  // 不需要刷新输出缓冲区，可以使用 '\n' 代替 endl
  // 将 << 运算符（和 >> 运算符）想象成一个传送带可能会有所帮助，它按照指示的方向移动数据。
  // 在这种情况下，当内容被传送到 std::cout 时，它就会被输出。
  std::cout << "i am" << 18 << " years old." << '\n';

  return 0;
}
