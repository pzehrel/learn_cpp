/**
 * 运算符
 *
 * 在数学中，运算是一个涉及零个或多个输入值（称为操作数）并产生一个新值（称为输出值）的过程。要执行的特定运算由一个称为运算符的符号表示。
 *
 * 例如，小时候我们都学过 2 + 3 等于 5。在这种情况下，字面量 2 和 3
 * 是操作数，符号+是运算符，它告诉我们对操作数应用数学加法以产生新值 5。
 *
 * 在 C++ 中，运算的工作方式与您期望的一样，只是多了很多种运算符。
 *
 *
 * 元数：运算符接受的作为输入的运算数数量称为运算符的元数
 *
 * 一元运算符（Unary）：作用于一个运算数，典型例子是“-”运算符。
 * 例如，给定 -5 ， operator- 接受字面量运算数 5 并翻转其符号以产生新的输出值 -5 。
 *
 * 二元运算符（Binary）：作用于两个运算数，典型例子是“+”运算符。
 * 例如，给定 2 + 3 ， operator+ 接受字面量运算数 2 和 3 并将它们相加以产生新的输出值 5 。
 *
 * 三元运算符（Ternary）：作用于三个运算数，C++ 中唯一的三元运算符是条件运算符 “?:” 。
 *
 * 零元运算符（Nullary）：不作用于任何运算数的运算符。C++ 中也只有一个这样的运算符（throw 运算符）
 *
 *
 * 有少数运算符不产生返回值，例如 throw 和 delete
 *
 * 有一些运算符还有副作用（side effect），即它们在产生返回值的同时还会修改程序的状态
 * 例如，赋值运算符（=）不仅将右侧的值赋给左侧的变量，还会返回赋值后的值，左值的状态也会被修改，这是可以观察的。
 * 还有 ++ 和 -- 运算符，它们会增加或减少变量的值，同时返回修改后的值。
 *
 * 在日常用语中，“副作用”一词通常用来指某事发生后的次要（通常是负面或意想不到的）结果（例如服药）。
 * 例如，口服抗生素的常见副作用是腹泻。因此，我们通常认为副作用是我们需要避免的，或者说是附带于主要目标的东西。
 * 在 C++ 中，“副作用”一词的含义有所不同：它是除了产生返回值之外，运算符或函数的可观察到的效果。
 *
 * 由于我们将在更详细地讨论运算符时会清楚地看到原因，对于作为符号的运算符，通常将运算符的符号附加到单词 operator 上。
 * 例如，加法运算符将写成 “operator+” ，提取运算符将写成 “operator>>” 。
 * 注意，这个约定对后面的运算符重载也适用。
 */

int main() {
  //
  return 0;
}
