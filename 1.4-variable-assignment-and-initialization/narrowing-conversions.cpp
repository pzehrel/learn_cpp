/**
 * 窄化转换
 *
 * 窄化转换是指将数据从更大的存储空间或更高精度的类型转换为更小的存储空间或更低精度的类型。
 * 这种转换可能导致数据丢失或精度损失。
 *
 * 可以理解为数据丢失的转换就是窄化转换。使用列表初始化可以有效防止窄化转换。
 */

#include <iostream>

int main() {

  // 整数只能容纳非小数的值。
  // 用小数 4.5 初始化一个 int 需要编译器将 4.5 转换为 int 可以容纳的值。
  // 这种转换是一种窄化转换，因为该值的小数部分将会丢失。

  // int w1 { 4.5 }; // 编译错误：列表初始化不允许窄化转换

  int w = 4.5; // 编译通过：w2 被拷贝初始化为值 4
  // int w3 { 4.5 }; // 编译通过：w3 被直接初始化为值 4

  // 这种窄化转换会直接丢弃小数部分，这可能不是程序员想要的结果。所以会有警告。
  std::cout << "w: " << w << std::endl;

  double d = 3.14;
  int i = static_cast<int>(d); // 显示转换，明确的窄化转换,避免警告
  std::cout << "i: " << i << std::endl;

  return 0;
}
